# ğŸ”§ Tipos opcionais e relacionamentos dinÃ¢micos
# ğŸ”§ Optional types and dynamic relationships
from typing import Optional
from sqlmodel import Field, SQLModel, Relationship
from datetime import datetime

# ğŸ§ƒ Modelo que representa um produto (refrigerante) disponÃ­vel para venda
# ğŸ§ƒ Model representing a soda product available for sale
class Product(SQLModel, table=True):
    # ğŸ†” Identificador Ãºnico do produto (gerado automaticamente)
    # ğŸ†” Unique product ID (automatically generated)
    id: Optional[int] = Field(default=None, primary_key=True)

    # ğŸ§¾ Nome do produto (indexado e Ãºnico)
    # ğŸ§¾ Product name (indexed and unique)
    name: str = Field(
        index=True,
        unique=True,
        description="Nome do refrigerante (e.g., 'Coca-Cola', 'GuaranÃ¡')"  # BR
        # "Name of the soda (e.g., 'Coca-Cola', 'GuaranÃ¡')"               # EN
    )

    # ğŸ’² PreÃ§o por unidade
    # ğŸ’² Unit price
    price: float = Field(description="PreÃ§o unitÃ¡rio do refrigerante")  # BR
    # price: float = Field(description="Unit price of the soda")        # EN

    # ğŸ“¦ Quantidade disponÃ­vel em estoque (nÃ£o pode ser negativa)
    # ğŸ“¦ Available stock quantity (cannot be negative)
    stock: int = Field(ge=0, description="NÃ­vel de estoque atual do refrigerante")  # BR
    # stock: int = Field(ge=0, description="Current inventory level")               # EN

    # ğŸ”„ (Opcional) Relacionamento reverso com transaÃ§Ãµes
    # ğŸ”„ (Optional) Reverse relationship with transactions
    # transactions: list["Transaction"] = Relationship(back_populates="product")

# ğŸ’³ Modelo que representa uma transaÃ§Ã£o de compra realizada
# ğŸ’³ Model representing a completed purchase transaction
class Transaction(SQLModel, table=True):
    # ğŸ†” Identificador Ãºnico da transaÃ§Ã£o
    # ğŸ†” Unique transaction ID
    id: Optional[int] = Field(default=None, primary_key=True)

    # ğŸ”— Chave estrangeira vinculada ao produto comprado
    # ğŸ”— Foreign key linked to purchased product
    product_id: int = Field(
        foreign_key="product.id",
        description="ID do produto de refrigerante comprado"  # BR
        # description="ID of the purchased soda product"       # EN
    )

    # ğŸ”¢ Quantidade comprada (deve ser maior que 0)
    # ğŸ”¢ Quantity purchased (must be greater than 0)
    quantity: int = Field(gt=0, description="Quantidade comprada")  # BR
    # quantity: int = Field(gt=0, description="Amount purchased")   # EN

    # ğŸ’° Valor total da transaÃ§Ã£o (preÃ§o unitÃ¡rio Ã— quantidade)
    # ğŸ’° Total transaction amount (unit price Ã— quantity)
    total_price: float = Field(description="PreÃ§o total da transaÃ§Ã£o")  # BR
    # total_price: float = Field(description="Total transaction price") # EN

    # ğŸ•’ Data e hora em que a compra foi realizada
    # ğŸ•’ Date and time when the purchase was made
    timestamp: datetime = Field(
        default_factory=datetime.now,
        description="Data e hora da transaÃ§Ã£o"  # BR
        # description="Timestamp of the transaction" # EN
    )

    # ğŸ”„ (Opcional) Relacionamento reverso com o produto
    # ğŸ”„ (Optional) Reverse relationship with the product
    # product: Product = Relationship(back_populates="transactions")